name: CI/CD Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Check file sizes
        run: |
          echo "Checking for large files..."
          find . -type f -size +1M -not -path "./.git/*" -not -path "./node_modules/*" || true
          
      - name: Basic file validation
        run: |
          echo "Validating HTML files exist..."
          test -f index.html && echo "✅ index.html exists"
          test -f pages/arithmetic.html && echo "✅ pages/arithmetic.html exists" 
          test -f pages/number-sequences.html && echo "✅ pages/number-sequences.html exists"
          test -f assets/css/main.css && echo "✅ assets/css/main.css exists"
          test -f assets/js/config.js && echo "✅ assets/js/config.js exists"
          test -f assets/js/script.js && echo "✅ assets/js/script.js exists"
          test -f assets/js/auth.js && echo "✅ assets/js/auth.js exists"
          echo "File validation complete"
          
      - name: Security scan
        run: |
          echo "Scanning for potential security issues..."
          echo "Checking for hardcoded credentials (excluding config.js)..."
          grep -r -i "password.*=" . --exclude-dir=.git --exclude="config.js" --exclude="*.md" || echo "No hardcoded passwords found"
          echo "Security scan complete"
          
  security:
    name: Security Checks  
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Check for sensitive files
        run: |
          echo "Checking for sensitive file types..."
          find . -name "*.key" -o -name "*.pem" -o -name "*.p12" -o -name "*.pfx" -o -name ".env" | head -10 || echo "No sensitive files found"
          
      - name: Validate public config
        run: |
          echo "Validating configuration files..."
          if [ -f "assets/js/config.js" ]; then
            echo "✅ assets/js/config.js found - checking for public configuration"
            grep -q "APP_CONFIG" assets/js/config.js && echo "✅ Public configuration structure found"
          fi
          
  deployment-test:
    name: Deployment Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Test static file serving
        run: |
          echo "Starting local server for testing..."
          python3 -m http.server 8080 &
          SERVER_PID=$!
          sleep 5
          
          echo "Testing file accessibility..."
          curl -f http://localhost:8080/index.html -o /dev/null && echo "✅ index.html accessible"
          curl -f http://localhost:8080/pages/arithmetic.html -o /dev/null && echo "✅ pages/arithmetic.html accessible"  
          curl -f http://localhost:8080/pages/number-sequences.html -o /dev/null && echo "✅ pages/number-sequences.html accessible"
          curl -f http://localhost:8080/assets/css/main.css -o /dev/null && echo "✅ assets/css/main.css accessible"
          curl -f http://localhost:8080/assets/js/config.js -o /dev/null && echo "✅ assets/js/config.js accessible"
          
          echo "Stopping test server..."
          kill $SERVER_PID || true
          echo "Deployment test complete"

  lint-check:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install basic linting tools
        run: |
          npm install -g jshint
          
      - name: Lint JavaScript files
        run: |
          echo "Linting JavaScript files..."
          for file in assets/js/*.js; do
            if [ -f "$file" ]; then
              echo "Checking $file..."
              jshint "$file" || echo "⚠️  Issues found in $file (non-blocking)"
            fi
          done
          echo "JavaScript linting complete"